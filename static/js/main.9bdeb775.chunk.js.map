{"version":3,"file":"static/js/main.9bdeb775.chunk.js","sources":["/home/cs/work/inu-v2-a/react-src/src/App.js","/home/cs/work/inu-v2-a/react-src/src/components/Home/Home.js","/home/cs/work/inu-v2-a/react-src/src/components/Home/index.js","/home/cs/work/inu-v2-a/react-src/src/components/Repeat/Repeat.js","/home/cs/work/inu-v2-a/react-src/src/components/Repeat/index.js","/home/cs/work/inu-v2-a/react-src/src/components/Reset/Reset.js","/home/cs/work/inu-v2-a/react-src/src/components/Reset/index.js","/home/cs/work/inu-v2-a/react-src/src/components/TypographicGrid/TypographicGrid.js","/home/cs/work/inu-v2-a/react-src/src/components/TypographicGrid/index.js","/home/cs/work/inu-v2-a/react-src/src/hooks/index.js","/home/cs/work/inu-v2-a/react-src/src/hooks/useQuery.js","/home/cs/work/inu-v2-a/react-src/src/index.js","/home/cs/work/inu-v2-a/react-src/src/serviceWorker.js"],"sourcesContent":["import React from \"react\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\n\nimport Home from \"./components/Home\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost/react-wp/graphql\"\n});\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <Home />\n  </ApolloProvider>\n);\n\nexport default App;\n","import React, { useEffect } from \"react\";\nimport gql from \"graphql-tag\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport { stringify } from \"flatted\";\n\nimport { useQuery } from \"./../../hooks\";\n\nimport Reset from \"../Reset\";\nimport TypographicGrid from \"../TypographicGrid\";\n\n// Global settings\nconst Props = {\n  siteTitle: PropTypes.string,\n  siteDescription: PropTypes.string,\n  siteURL: PropTypes.string\n};\n\n// Default global settings\nconst DefaultProps = {\n  siteTitle: \"Ioan Chivu\",\n  siteDescription: \"Photo traveler\",\n  siteURL: \"http://inu.ro\"\n};\n\n// Query for site info\nconst query = gql`\n  query allSettings {\n    allSettings {\n      generalSettingsTitle\n      generalSettingsUrl\n      generalSettingsDescription\n    }\n  }\n`;\n\n// Get site info\nconst getSiteInfo = data => {\n  console.log(\"data:\" + stringify(data));\n};\n\nconst Home = props => {\n  // Set up the site info\n  let { siteTitle, siteDescription } = props;\n\n  const { data } = useQuery(query);\n\n  useEffect(() => {});\n\n  //let { title, description } = getSiteInfo(data);\n  console.log(\"data:\" + stringify(data));\n\n  return (\n    <>\n      <Reset />\n      <TypographicGrid\n        displayVerticalRhytm={false}\n        displayHorizontalRhytm={false}\n        numberOfHorizontalLines={100}\n        numberOfVerticalLines={100}\n        lineColor=\"#666\"\n      />\n      <Helmet>\n        <title>{siteTitle}</title>\n        <meta name=\"description\" content={siteDescription} />\n      </Helmet>\n    </>\n  );\n};\n\nHome.propTypes = Props;\nHome.defaultProps = DefaultProps;\n\nexport default Home;\n","export { default } from \"./Home\";\n","/**\n * Imitates the for loop inside JSX\n * - https://reactjs.org/docs/jsx-in-depth.html\n */\nconst Repeat = props => {\n  let ret = [];\n  let startAt = props.startAt;\n  let endAt = startAt + props.numberOfTimes;\n\n  for (let i = startAt; i < endAt; i++) {\n    ret.push(props.children(i));\n  }\n\n  return ret;\n};\n\nexport default Repeat;\n","export { default } from './Repeat'\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"polished\";\n\n// Global reset with `normalize.css`\nconst GlobalReset = createGlobalStyle`\n\t${normalize()}\n\n\tbody {\n\t\t// Grid reset\n\t\t//\n\t\tbox-sizing: border-box;\n\n\t\t*,\n\t\t*::before,\n\t\t*::after {\n\t\t\tbox-sizing: inherit;\n\t\t}\n\n\t\t// Typography reset on top of Normalize.css\n\t\t//\n\t\th1,\n\t\th2,\n\t\th3,\n\t\th4,\n\t\th5,\n\t\th6 {\n\t\t\tfont-size: 1em;\n\t\t\tfont-weight: normal;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t}\n\n\t\tp,\n\t\tfigure,\n\t\tblockquote,\n\t\tul,\n\t\tol,\n\t\tli {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t}\n\n\t\t// Remove the extra bottom spacing for <img> inside <a>\n\t\t// unfortunatelly in WP it breaks the figcaption ...\n\t\tfigure a {\n\t\t\t// line-height: 0;\n\t\t\t// display: inline-block;\n\t\t}\n\n\t\ta {\n\t\t\tword-wrap: break-word;\n\t\t}\n\n\t\t// https://stackoverflow.com/questions/17838607/making-an-iframe-responsive\n\t\tiframe,\n\t\tobject,\n\t\tembed {\n\t\t\tmax-width: 100%;\n\t\t}\n\t}\n`;\n\nconst Reset = () => {\n  return <GlobalReset />;\n};\n\nexport default Reset;\n","export { default } from './Reset'\n","import React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Repeat from \"../Repeat\";\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tfont-size: 100%;\n\t\tline-height: 1.25;\n\t\t--lem: 1.25em;\n\t}\n`;\n\nconst Rhythm = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst VerticalRhythm = styled(Rhythm)`\n  display: ${props => (props.displayVerticalRhytm ? \"flex\" : \"none\")};\n  flex-wrap: wrap;\n`;\n\nconst HorizontalRhythm = styled(Rhythm)`\n  display: ${props => (props.displayHorizontalRhytm ? \"block\" : \"none\")};\n`;\n\nconst Line = styled.div`\n  box-sizing: border-box;\n  border-color: ${props => (props.lineColor ? props.lineColor : \"transparent\")};\n  border-width: 1px;\n`;\n\nconst VerticalRhythmLine = styled(Line)`\n  width: var(--lem);\n  height: 100%;\n  border-right-style: solid;\n`;\n\nconst HorizontalRhythmLine = styled(Line)`\n  width: 100%;\n  height: var(--lem);\n  border-bottom-style: solid;\n`;\n\nconst Container = styled.div``;\n\nconst TypographicGrid = props => {\n  const {\n    displayVerticalRhytm,\n    displayHorizontalRhytm,\n    numberOfHorizontalLines,\n    numberOfVerticalLines,\n    lineColor\n  } = props;\n\n  return (\n    <>\n      <GlobalStyle />\n      {(displayHorizontalRhytm || displayVerticalRhytm) && (\n        <Container className=\"typographic-grid\">\n          {displayHorizontalRhytm && (\n            <HorizontalRhythm\n              className=\"horizontal-lines\"\n              displayHorizontalRhytm={displayHorizontalRhytm}\n            >\n              <Repeat numberOfTimes={numberOfHorizontalLines} startAt={0}>\n                {i => <HorizontalRhythmLine key={i} lineColor={lineColor} />}\n              </Repeat>\n            </HorizontalRhythm>\n          )}\n          {displayVerticalRhytm && (\n            <VerticalRhythm\n              className=\"vertical-lines\"\n              displayVerticalRhytm={displayVerticalRhytm}\n            >\n              <Repeat numberOfTimes={numberOfVerticalLines} startAt={0}>\n                {i => <VerticalRhythmLine key={i} lineColor={lineColor} />}\n              </Repeat>\n            </VerticalRhythm>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default TypographicGrid;\n","export { default } from './TypographicGrid'\n","export { useQuery, useLoadMore } from \"./useQuery\";\n","import { useState } from \"react\";\nimport { useQuery as _useQuery } from \"react-apollo-hooks\";\n\nconst useLoadMore = (fetchMore, data, variables) => {\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  function loadMore() {\n    setIsLoadingMore(true);\n\n    fetchMore({\n      variables: {\n        ...variables,\n        skip: data.list.length\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        setIsLoadingMore(false);\n\n        if (!fetchMoreResult) {\n          return previousResult;\n        }\n\n        return {\n          ...fetchMoreResult,\n          edges: [...previousResult.edges, ...fetchMoreResult.edges]\n        };\n      }\n    });\n  }\n\n  return [isLoadingMore, loadMore];\n};\n\nconst useQuery = (schema, variables = {}, options = {}) => {\n  const { fetchMore, data, ...other } = _useQuery(schema, {\n    variables,\n    ...options\n  });\n  const [isLoadingMore, loadMore] = useLoadMore(fetchMore, data, variables);\n\n  return { isLoadingMore, loadMore, fetchMore, data, ...other };\n};\n\nexport { useQuery, useLoadMore };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  var axe = require(\"react-axe\");\n  axe(React, ReactDOM, 1000);\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AAKA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AACA;AAyDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AAQA;AAQA;AAKA;AAIA;AAMA;AAMA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAKA;AACA,eA8BA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}